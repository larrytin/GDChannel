//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/impl/ReconnectBus.java
//
//  Created by retechretech.
//

#include "IOSObjectArray.h"
#include "com/goodow/realtime/channel/BusHook.h"
#include "com/goodow/realtime/channel/State.h"
#include "com/goodow/realtime/channel/impl/ReconnectBus.h"
#include "com/goodow/realtime/channel/impl/SimpleBus.h"
#include "com/goodow/realtime/channel/impl/WebSocketBus.h"
#include "com/goodow/realtime/channel/util/FuzzingBackOffGenerator.h"
#include "com/goodow/realtime/core/Handler.h"
#include "com/goodow/realtime/core/Platform.h"
#include "com/goodow/realtime/core/Scheduler.h"
#include "com/goodow/realtime/core/WebSocket.h"
#include "com/goodow/realtime/json/Json.h"
#include "com/goodow/realtime/json/JsonArray.h"
#include "com/goodow/realtime/json/JsonObject.h"
#include "java/lang/Void.h"

@implementation GDCReconnectBus

NSString * GDCReconnectBus_AUTO_RECONNECT_ = @"reconnect";

+ (NSString *)AUTO_RECONNECT {
  return GDCReconnectBus_AUTO_RECONNECT_;
}

- (id)initWithNSString:(NSString *)url
      withGDJsonObject:(id<GDJsonObject>)options {
  if (self = [super initWithNSString:url withGDJsonObject:options]) {
    queuedMessages_ = [GDJson createArray];
    backOffGenerator_ = [[ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator alloc] initWithInt:1 * 1000 withInt:30 * 60 * 1000 withDouble:0.5];
    (void) [super setHookWithGDCBusHook:[[GDCReconnectBus_$1 alloc] initWithGDCReconnectBus:self]];
  }
  return self;
}

- (void)reconnect {
  if (state_ == GDCStateEnum_get_OPEN()) {
    return;
  }
  if (webSocket_ != nil) {
    [webSocket_ close];
  }
  [self connectWithNSString:url_ withGDJsonObject:[self getOptions]];
}

- (GDCSimpleBus *)setHookWithGDCBusHook:(id<GDCBusHook>)hook {
  self->hook_ReconnectBus_ = hook;
  return self;
}

- (void)setOptionsWithGDJsonObject:(id<GDJsonObject>)options {
  [super setOptionsWithGDJsonObject:options];
  reconnect__ = options == nil || ![options has:GDCReconnectBus_AUTO_RECONNECT_] ? YES : [options getBoolean:GDCReconnectBus_AUTO_RECONNECT_];
}

- (void)doClose {
  reconnect__ = NO;
  (void) [((id<GDJsonArray>) nil_chk(queuedMessages_)) clear];
  [super doClose];
}

- (void)copyAllFieldsTo:(GDCReconnectBus *)other {
  [super copyAllFieldsTo:other];
  other->backOffGenerator_ = backOffGenerator_;
  other->hook_ReconnectBus_ = hook_ReconnectBus_;
  other->queuedMessages_ = queuedMessages_;
  other->reconnect__ = reconnect__;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withGDJsonObject:", "ReconnectBus", NULL, 0x1, NULL },
    { "reconnect", NULL, "V", 0x1, NULL },
    { "setHookWithGDCBusHook:", "setHook", "Lcom.goodow.realtime.channel.impl.SimpleBus;", 0x1, NULL },
    { "setOptionsWithGDJsonObject:", "setOptions", "V", 0x1, NULL },
    { "doClose", NULL, "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "AUTO_RECONNECT_", NULL, 0x19, "Ljava.lang.String;", &GDCReconnectBus_AUTO_RECONNECT_,  },
    { "backOffGenerator_", NULL, 0x12, "Lcom.goodow.realtime.channel.util.FuzzingBackOffGenerator;", NULL,  },
    { "hook_ReconnectBus_", "hook", 0x2, "Lcom.goodow.realtime.channel.BusHook;", NULL,  },
    { "reconnect__", "reconnect", 0x2, "Z", NULL,  },
    { "queuedMessages_", NULL, 0x12, "Lcom.goodow.realtime.json.JsonArray;", NULL,  },
  };
  static J2ObjcClassInfo _GDCReconnectBus = { "ReconnectBus", "com.goodow.realtime.channel.impl", NULL, 0x1, 5, methods, 5, fields, 0, NULL};
  return &_GDCReconnectBus;
}

@end

@implementation GDCReconnectBus_QueuedMessage

- (id)initWithGDCReconnectBus:(GDCReconnectBus *)outer$
                  withBoolean:(BOOL)send
                 withNSString:(NSString *)address
                       withId:(id)msg
withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)replyHandler {
  if (self = [super init]) {
    self->send_ = send;
    self->address_ = address;
    self->msg_ = msg;
    self->replyHandler_ = replyHandler;
  }
  return self;
}

- (void)copyAllFieldsTo:(GDCReconnectBus_QueuedMessage *)other {
  [super copyAllFieldsTo:other];
  other->address_ = address_;
  other->msg_ = msg_;
  other->replyHandler_ = replyHandler_;
  other->send_ = send_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithGDCReconnectBus:withBoolean:withNSString:withId:withComGoodowRealtimeCoreHandler:", "QueuedMessage", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "send_", NULL, 0x10, "Z", NULL,  },
    { "address_", NULL, 0x10, "Ljava.lang.String;", NULL,  },
    { "msg_", NULL, 0x10, "Ljava.lang.Object;", NULL,  },
    { "replyHandler_", NULL, 0x10, "Lcom.goodow.realtime.core.Handler;", NULL,  },
  };
  static J2ObjcClassInfo _GDCReconnectBus_QueuedMessage = { "QueuedMessage", "com.goodow.realtime.channel.impl", "ReconnectBus", 0x2, 1, methods, 4, fields, 0, NULL};
  return &_GDCReconnectBus_QueuedMessage;
}

@end

@implementation GDCReconnectBus_$1

- (void)handleOpened {
  [((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) nil_chk(this$0_->backOffGenerator_)) reset];
  IOSObjectArray *addresses = [((id<GDJsonObject>) nil_chk(this$0_->handlerMap_)) keys];
  {
    IOSObjectArray *a__ = addresses;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *address = (*b__++);
      NSAssert([((id<GDJsonArray>) nil_chk([this$0_->handlerMap_ getArray:address])) count] > 0, [[NSString stringWithFormat:@"Handlers registried on %@ shouldn't be empty" J2OBJC_COMMA() address] description]);
      if (![this$0_ isLocalForkWithNSString:address]) {
        [this$0_ sendRegisterWithNSString:address];
      }
    }
  }
  if ([((id<GDJsonArray>) nil_chk(this$0_->queuedMessages_)) count] != 0) {
    [this$0_->queuedMessages_ forEach:[[GDCReconnectBus_$1_$1 alloc] initWithGDCReconnectBus_$1:self]];
    (void) [this$0_->queuedMessages_ clear];
  }
  [super handleOpened];
}

- (void)handlePostClose {
  if (this$0_->reconnect__) {
    [((id<ComGoodowRealtimeCoreScheduler>) nil_chk([ComGoodowRealtimeCorePlatform scheduler])) scheduleDelayWithInt:((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters *) nil_chk([((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) nil_chk(this$0_->backOffGenerator_)) next]))->targetDelay_ withComGoodowRealtimeCoreHandler:[[GDCReconnectBus_$1_$2 alloc] initWithGDCReconnectBus_$1:self]];
  }
  [super handlePostClose];
}

- (BOOL)handleSendOrPubWithBoolean:(BOOL)send
                      withNSString:(NSString *)address
                            withId:(id)msg
  withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)replyHandler {
  BOOL allow = [super handleSendOrPubWithBoolean:send withNSString:address withId:msg withComGoodowRealtimeCoreHandler:replyHandler];
  if (!allow || this$0_->state_ == GDCStateEnum_get_OPEN() || [this$0_ isLocalForkWithNSString:address]) {
    return allow;
  }
  if (this$0_->reconnect__) {
    [this$0_ reconnect];
  }
  (void) [((id<GDJsonArray>) nil_chk(this$0_->queuedMessages_)) push:[[GDCReconnectBus_QueuedMessage alloc] initWithGDCReconnectBus:this$0_ withBoolean:send withNSString:address withId:msg withComGoodowRealtimeCoreHandler:replyHandler]];
  return NO;
}

- (id<GDCBusHook>)delegate {
  return this$0_->hook_ReconnectBus_;
}

- (id)initWithGDCReconnectBus:(GDCReconnectBus *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleOpened", NULL, "V", 0x1, NULL },
    { "handlePostClose", NULL, "V", 0x1, NULL },
    { "handleSendOrPubWithBoolean:withNSString:withId:withComGoodowRealtimeCoreHandler:", "handleSendOrPub", "Z", 0x1, NULL },
    { "delegate", NULL, "Lcom.goodow.realtime.channel.BusHook;", 0x4, NULL },
    { "initWithGDCReconnectBus:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.ReconnectBus;", NULL,  },
  };
  static J2ObjcClassInfo _GDCReconnectBus_$1 = { "$1", "com.goodow.realtime.channel.impl", "ReconnectBus", 0x8000, 5, methods, 1, fields, 0, NULL};
  return &_GDCReconnectBus_$1;
}

@end

@implementation GDCReconnectBus_$1_$1

- (void)callWithInt:(int)index
             withId:(GDCReconnectBus_QueuedMessage *)value {
  [this$0_->this$0_ doSendOrPubWithBoolean:((GDCReconnectBus_QueuedMessage *) nil_chk(value))->send_ withNSString:value->address_ withId:value->msg_ withComGoodowRealtimeCoreHandler:value->replyHandler_];
}

- (id)initWithGDCReconnectBus_$1:(GDCReconnectBus_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "callWithInt:withGDCReconnectBus_QueuedMessage:", "call", "V", 0x1, NULL },
    { "initWithGDCReconnectBus_$1:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.ReconnectBus$1;", NULL,  },
  };
  static J2ObjcClassInfo _GDCReconnectBus_$1_$1 = { "$1", "com.goodow.realtime.channel.impl", "ReconnectBus$$1", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_GDCReconnectBus_$1_$1;
}

@end

@implementation GDCReconnectBus_$1_$2

- (void)handleWithId:(id)event {
  if (this$0_->this$0_->reconnect__) {
    [this$0_->this$0_ reconnect];
  }
}

- (id)initWithGDCReconnectBus_$1:(GDCReconnectBus_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithJavaLangVoid:", "handle", "V", 0x1, NULL },
    { "initWithGDCReconnectBus_$1:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.ReconnectBus$1;", NULL,  },
  };
  static J2ObjcClassInfo _GDCReconnectBus_$1_$2 = { "$2", "com.goodow.realtime.channel.impl", "ReconnectBus$$1", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_GDCReconnectBus_$1_$2;
}

@end
