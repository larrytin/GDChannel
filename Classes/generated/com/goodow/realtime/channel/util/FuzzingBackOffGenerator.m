//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/util/FuzzingBackOffGenerator.java
//
//  Created by retechretech.
//

#include "com/goodow/realtime/channel/util/FuzzingBackOffGenerator.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"

@implementation ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator

- (id)initWithInt:(int)initialBackOff
          withInt:(int)maxBackOff
       withDouble:(double)randomizationFactor {
  if (self = [super init]) {
    if (randomizationFactor < 0 || randomizationFactor > 1) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"randomizationFactor must be between 0 and 1. actual %f", randomizationFactor]];
    }
    if (initialBackOff <= 0) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"initialBackOff must be between 0 and 1. actual %d", initialBackOff]];
    }
    self->randomizationFactor_ = randomizationFactor;
    self->initialBackOff_ = initialBackOff;
    self->maxBackOff_ = maxBackOff;
    self->nextBackOffTime_ = initialBackOff;
    self->backOffTime_ = 0;
  }
  return self;
}

- (ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters *)next {
  int ret = [JavaLangMath minWithInt:nextBackOffTime_ withInt:maxBackOff_];
  nextBackOffTime_ += backOffTime_;
  if (nextBackOffTime_ <= 0) {
    nextBackOffTime_ = JavaLangInteger_MAX_VALUE;
  }
  backOffTime_ = ret;
  int randomizeTime = (int) (backOffTime_ * (1.0 + ([JavaLangMath random] * randomizationFactor_)));
  int minAllowedTime = (int) [JavaLangMath roundWithDouble:randomizeTime - backOffTime_ * randomizationFactor_];
  return [[ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters alloc] initWithInt:randomizeTime withInt:minAllowedTime];
}

- (void)reset {
  nextBackOffTime_ = initialBackOff_;
  backOffTime_ = 0;
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *)other {
  [super copyAllFieldsTo:other];
  other->backOffTime_ = backOffTime_;
  other->initialBackOff_ = initialBackOff_;
  other->maxBackOff_ = maxBackOff_;
  other->nextBackOffTime_ = nextBackOffTime_;
  other->randomizationFactor_ = randomizationFactor_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withDouble:", "FuzzingBackOffGenerator", NULL, 0x1, NULL },
    { "next", NULL, "Lcom.goodow.realtime.channel.util.FuzzingBackOffGenerator$BackOffParameters;", 0x1, NULL },
    { "reset", NULL, "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "randomizationFactor_", NULL, 0x12, "D", NULL,  },
    { "initialBackOff_", NULL, 0x12, "I", NULL,  },
    { "maxBackOff_", NULL, 0x12, "I", NULL,  },
    { "nextBackOffTime_", NULL, 0x2, "I", NULL,  },
    { "backOffTime_", NULL, 0x2, "I", NULL,  },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator = { "FuzzingBackOffGenerator", "com.goodow.realtime.channel.util", NULL, 0x1, 3, methods, 5, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator;
}

@end

@implementation ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters

- (id)initWithInt:(int)targetDelay
          withInt:(int)minimumDelay {
  if (self = [super init]) {
    self->targetDelay_ = targetDelay;
    self->minimumDelay_ = minimumDelay;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters *)other {
  [super copyAllFieldsTo:other];
  other->minimumDelay_ = minimumDelay_;
  other->targetDelay_ = targetDelay_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:", "BackOffParameters", NULL, 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "targetDelay_", NULL, 0x11, "I", NULL,  },
    { "minimumDelay_", NULL, 0x11, "I", NULL,  },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters = { "BackOffParameters", "com.goodow.realtime.channel.util", "FuzzingBackOffGenerator", 0x9, 1, methods, 2, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters;
}

@end
